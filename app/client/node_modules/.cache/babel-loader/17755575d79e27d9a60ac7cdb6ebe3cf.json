{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { AxiosError } from \"axios\";\nimport { signin as signinRoute } from '../../api';\nconst initialState = {\n  user: null,\n  error: \"\",\n  loading: false\n};\n\nconst formatError = error => {\n  var _error$response;\n\n  return error instanceof AxiosError ? (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.error : \"Something went wrong on the server\";\n};\n\nexport const login = createAsyncThunk(\"/auth/signin\", async (signinParams, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await signinRoute(signinParams);\n    signinParams.toast.success(\"Login Succesfully!\");\n    signinParams.navigate('/');\n    return response.data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return rejectWithValue(formatError(error));\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: \"Auth\",\n  initialState,\n  reducers: {\n    [login.pending]: (state, action) => {}\n  },\n  extraReducers: {}\n}); // const signinReducer = (state: AuthState = INITIAL_STATE, action: SigninActions): AuthState => {\n//     switch (action.type) {\n//         case ActionTypes.SIGN_IN:\n//             return { ...state, user: action.payload.user, loading: false, error: \"\" };\n//         case ActionTypes.SIGNIN_ERROR:\n//             return { ...state, error: action.payload.error };\n//         case ActionTypes.SET_USER:\n//             return { ...state, user: action.payload.user };\n//         case ActionTypes.SIGNIN_LOADING:\n//             return { ...state, loading: true };\n//         case ActionTypes.SIGN_OUT:\n//             return INITIAL_STATE;\n//         default:\n//             return INITIAL_STATE;\n//     }\n// }\n\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AxiosError","signin","signinRoute","initialState","user","error","loading","formatError","response","data","login","signinParams","rejectWithValue","toast","success","navigate","Error","authSlice","name","reducers","pending","state","action","extraReducers","reducer"],"sources":["/home/haziz1/react-projects/tour-app/client/src/states/reducers/signin-reducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { toast as ToastType } from 'react-toastify';\nimport { AxiosError } from \"axios\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport { ActionTypes } from \"../action-types\";\nimport { SigninActions } from \"../actions/signin-action\";\nimport { signin as signinRoute } from '../../api';\n\n\nconst initialState = {\n    user: null,\n    error: \"\",\n    loading: false\n};\n\n\ninterface AuthParams {\n    email: string;\n    password: string;\n    navigate: NavigateFunction;\n    toast: typeof ToastType;\n}\n\nconst formatError = (error: any): string => {\n    return error instanceof AxiosError\n        ? error.response?.data.error\n        : \"Something went wrong on the server\";\n}\n\nexport const login = createAsyncThunk(\n    \"/auth/signin\",\n    async (signinParams: AuthParams, { rejectWithValue }) => {\n        try {\n            const response = await signinRoute(signinParams)\n            signinParams.toast.success(\"Login Succesfully!\");\n            signinParams.navigate('/');\n            return response.data;\n        } catch (error) {\n            if (error instanceof Error) {\n                return rejectWithValue(formatError(error));\n            }\n        }\n    })\n\nconst authSlice = createSlice({\n    name: \"Auth\",\n    initialState,\n    reducers: {\n        [login.pending]: (state: any, action: any) => {\n\n        }\n    },\n    extraReducers: {}\n});\n\n\n// const signinReducer = (state: AuthState = INITIAL_STATE, action: SigninActions): AuthState => {\n//     switch (action.type) {\n//         case ActionTypes.SIGN_IN:\n//             return { ...state, user: action.payload.user, loading: false, error: \"\" };\n//         case ActionTypes.SIGNIN_ERROR:\n//             return { ...state, error: action.payload.error };\n//         case ActionTypes.SET_USER:\n//             return { ...state, user: action.payload.user };\n//         case ActionTypes.SIGNIN_LOADING:\n//             return { ...state, loading: true };\n//         case ActionTypes.SIGN_OUT:\n//             return INITIAL_STATE;\n//         default:\n//             return INITIAL_STATE;\n//     }\n// }\n\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,SAASC,UAAT,QAA2B,OAA3B;AAIA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,WAAtC;AAGA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IADW;EAEjBC,KAAK,EAAE,EAFU;EAGjBC,OAAO,EAAE;AAHQ,CAArB;;AAcA,MAAMC,WAAW,GAAIF,KAAD,IAAwB;EAAA;;EACxC,OAAOA,KAAK,YAAYL,UAAjB,sBACDK,KAAK,CAACG,QADL,oDACD,gBAAgBC,IAAhB,CAAqBJ,KADpB,GAED,oCAFN;AAGH,CAJD;;AAMA,OAAO,MAAMK,KAAK,GAAGZ,gBAAgB,CACjC,cADiC,EAEjC,OAAOa,YAAP,WAAyD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EACrD,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMN,WAAW,CAACS,YAAD,CAAlC;IACAA,YAAY,CAACE,KAAb,CAAmBC,OAAnB,CAA2B,oBAA3B;IACAH,YAAY,CAACI,QAAb,CAAsB,GAAtB;IACA,OAAOP,QAAQ,CAACC,IAAhB;EACH,CALD,CAKE,OAAOJ,KAAP,EAAc;IACZ,IAAIA,KAAK,YAAYW,KAArB,EAA4B;MACxB,OAAOJ,eAAe,CAACL,WAAW,CAACF,KAAD,CAAZ,CAAtB;IACH;EACJ;AACJ,CAbgC,CAA9B;AAeP,MAAMY,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MADoB;EAE1Bf,YAF0B;EAG1BgB,QAAQ,EAAE;IACN,CAACT,KAAK,CAACU,OAAP,GAAiB,CAACC,KAAD,EAAaC,MAAb,KAA6B,CAE7C;EAHK,CAHgB;EAQ1BC,aAAa,EAAE;AARW,CAAD,CAA7B,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeN,SAAS,CAACO,OAAzB"},"metadata":{},"sourceType":"module"}