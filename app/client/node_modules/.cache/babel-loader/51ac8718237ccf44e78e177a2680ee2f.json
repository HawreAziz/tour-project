{"ast":null,"code":"import axios from 'axios';\nimport localforage from 'localforage';\nconst api = axios.create({\n  baseURL: \"http://localhost:5000\"\n});\napi.interceptors.request.use(async req => {\n  const data = await localforage.getItem(\"profile\");\n\n  if (data) {\n    var _req$headers;\n\n    (_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.Authorization;\n  }\n\n  return req;\n});\nexport const signin = async signinCreds => await api.post('/users/signin', signinCreds);\nexport const signup = async signupCreds => await api.post('/users/signup', signupCreds);\nexport const createTour = async tourData => await api.post('/tours/create', tourData);","map":{"version":3,"names":["axios","localforage","api","create","baseURL","interceptors","request","use","req","data","getItem","headers","Authorization","signin","signinCreds","post","signup","signupCreds","createTour","tourData"],"sources":["/home/haziz1/react-projects/tour-app/client/src/api/index.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosRequestHeaders } from 'axios';\nimport localforage from 'localforage';\nimport { UserCredentials } from '../../types';\n\n\nconst api = axios.create({\n    baseURL: \"http://localhost:5000\"\n});\n\n\napi.interceptors.request.use(async (req: AxiosRequestConfig<AxiosRequestHeaders>) => {\n    const data = await localforage.getItem<UserCredentials>(\"profile\");\n    if(data){\n        req.headers?.Authorization\n    }\n    return req;\n});\n\ninterface SigninCreds {\n    email: string;\n    password: string;\n}\n\n\ninterface Signup {\n    email: string;\n    password: string;\n    name: string;\n}\n\ninterface TourData {\n    title: string;\n    description: string;\n    imageFile: string;\n    tags: string[];\n}\n\n\nexport const signin = async (signinCreds: SigninCreds) => await api.post('/users/signin', signinCreds);\nexport const signup = async (signupCreds: Signup) => await api.post('/users/signup', signupCreds);\nexport const createTour = async (tourData: TourData) => await api.post('/tours/create', tourData);"],"mappings":"AAAA,OAAOA,KAAP,MAA+D,OAA/D;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAIA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ;AAKAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,MAAOC,GAAP,IAAwD;EACjF,MAAMC,IAAI,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAqC,SAArC,CAAnB;;EACA,IAAGD,IAAH,EAAQ;IAAA;;IACJ,gBAAAD,GAAG,CAACG,OAAJ,8DAAaC,aAAb;EACH;;EACD,OAAOJ,GAAP;AACH,CAND;AA4BA,OAAO,MAAMK,MAAM,GAAG,MAAOC,WAAP,IAAoC,MAAMZ,GAAG,CAACa,IAAJ,CAAS,eAAT,EAA0BD,WAA1B,CAAzD;AACP,OAAO,MAAME,MAAM,GAAG,MAAOC,WAAP,IAA+B,MAAMf,GAAG,CAACa,IAAJ,CAAS,eAAT,EAA0BE,WAA1B,CAApD;AACP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAA8B,MAAMjB,GAAG,CAACa,IAAJ,CAAS,eAAT,EAA0BI,QAA1B,CAAvD"},"metadata":{},"sourceType":"module"}