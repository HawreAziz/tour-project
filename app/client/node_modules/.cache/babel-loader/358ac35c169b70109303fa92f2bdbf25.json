{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalize = void 0;\nvar defaults = {\n  parser: require(\"../parsers/esprima\"),\n  tabWidth: 4,\n  useTabs: false,\n  reuseWhitespace: true,\n  lineTerminator: require(\"os\").EOL || \"\\n\",\n  wrapColumn: 74,\n  sourceFileName: null,\n  sourceMapName: null,\n  sourceRoot: null,\n  inputSourceMap: null,\n  range: false,\n  tolerant: true,\n  quote: null,\n  trailingComma: false,\n  arrayBracketSpacing: false,\n  objectCurlySpacing: true,\n  arrowParensAlways: false,\n  flowObjectCommas: true,\n  tokens: true\n};\nvar hasOwn = defaults.hasOwnProperty; // Copy options and fill in default values.\n\nfunction normalize(opts) {\n  var options = opts || defaults;\n\n  function get(key) {\n    return hasOwn.call(options, key) ? options[key] : defaults[key];\n  }\n\n  return {\n    tabWidth: +get(\"tabWidth\"),\n    useTabs: !!get(\"useTabs\"),\n    reuseWhitespace: !!get(\"reuseWhitespace\"),\n    lineTerminator: get(\"lineTerminator\"),\n    wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n    sourceFileName: get(\"sourceFileName\"),\n    sourceMapName: get(\"sourceMapName\"),\n    sourceRoot: get(\"sourceRoot\"),\n    inputSourceMap: get(\"inputSourceMap\"),\n    parser: get(\"esprima\") || get(\"parser\"),\n    range: get(\"range\"),\n    tolerant: get(\"tolerant\"),\n    quote: get(\"quote\"),\n    trailingComma: get(\"trailingComma\"),\n    arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n    objectCurlySpacing: get(\"objectCurlySpacing\"),\n    arrowParensAlways: get(\"arrowParensAlways\"),\n    flowObjectCommas: get(\"flowObjectCommas\"),\n    tokens: !!get(\"tokens\")\n  };\n}\n\nexports.normalize = normalize;","map":{"version":3,"names":["Object","defineProperty","exports","value","normalize","defaults","parser","require","tabWidth","useTabs","reuseWhitespace","lineTerminator","EOL","wrapColumn","sourceFileName","sourceMapName","sourceRoot","inputSourceMap","range","tolerant","quote","trailingComma","arrayBracketSpacing","objectCurlySpacing","arrowParensAlways","flowObjectCommas","tokens","hasOwn","hasOwnProperty","opts","options","get","key","call","Math","max"],"sources":["/home/haziz1/node_modules/recast/lib/options.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nvar defaults = {\n    parser: require(\"../parsers/esprima\"),\n    tabWidth: 4,\n    useTabs: false,\n    reuseWhitespace: true,\n    lineTerminator: require(\"os\").EOL || \"\\n\",\n    wrapColumn: 74,\n    sourceFileName: null,\n    sourceMapName: null,\n    sourceRoot: null,\n    inputSourceMap: null,\n    range: false,\n    tolerant: true,\n    quote: null,\n    trailingComma: false,\n    arrayBracketSpacing: false,\n    objectCurlySpacing: true,\n    arrowParensAlways: false,\n    flowObjectCommas: true,\n    tokens: true,\n};\nvar hasOwn = defaults.hasOwnProperty;\n// Copy options and fill in default values.\nfunction normalize(opts) {\n    var options = opts || defaults;\n    function get(key) {\n        return hasOwn.call(options, key) ? options[key] : defaults[key];\n    }\n    return {\n        tabWidth: +get(\"tabWidth\"),\n        useTabs: !!get(\"useTabs\"),\n        reuseWhitespace: !!get(\"reuseWhitespace\"),\n        lineTerminator: get(\"lineTerminator\"),\n        wrapColumn: Math.max(get(\"wrapColumn\"), 0),\n        sourceFileName: get(\"sourceFileName\"),\n        sourceMapName: get(\"sourceMapName\"),\n        sourceRoot: get(\"sourceRoot\"),\n        inputSourceMap: get(\"inputSourceMap\"),\n        parser: get(\"esprima\") || get(\"parser\"),\n        range: get(\"range\"),\n        tolerant: get(\"tolerant\"),\n        quote: get(\"quote\"),\n        trailingComma: get(\"trailingComma\"),\n        arrayBracketSpacing: get(\"arrayBracketSpacing\"),\n        objectCurlySpacing: get(\"objectCurlySpacing\"),\n        arrowParensAlways: get(\"arrowParensAlways\"),\n        flowObjectCommas: get(\"flowObjectCommas\"),\n        tokens: !!get(\"tokens\"),\n    };\n}\nexports.normalize = normalize;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;AACA,IAAIC,QAAQ,GAAG;EACXC,MAAM,EAAEC,OAAO,CAAC,oBAAD,CADJ;EAEXC,QAAQ,EAAE,CAFC;EAGXC,OAAO,EAAE,KAHE;EAIXC,eAAe,EAAE,IAJN;EAKXC,cAAc,EAAEJ,OAAO,CAAC,IAAD,CAAP,CAAcK,GAAd,IAAqB,IAL1B;EAMXC,UAAU,EAAE,EAND;EAOXC,cAAc,EAAE,IAPL;EAQXC,aAAa,EAAE,IARJ;EASXC,UAAU,EAAE,IATD;EAUXC,cAAc,EAAE,IAVL;EAWXC,KAAK,EAAE,KAXI;EAYXC,QAAQ,EAAE,IAZC;EAaXC,KAAK,EAAE,IAbI;EAcXC,aAAa,EAAE,KAdJ;EAeXC,mBAAmB,EAAE,KAfV;EAgBXC,kBAAkB,EAAE,IAhBT;EAiBXC,iBAAiB,EAAE,KAjBR;EAkBXC,gBAAgB,EAAE,IAlBP;EAmBXC,MAAM,EAAE;AAnBG,CAAf;AAqBA,IAAIC,MAAM,GAAGtB,QAAQ,CAACuB,cAAtB,C,CACA;;AACA,SAASxB,SAAT,CAAmByB,IAAnB,EAAyB;EACrB,IAAIC,OAAO,GAAGD,IAAI,IAAIxB,QAAtB;;EACA,SAAS0B,GAAT,CAAaC,GAAb,EAAkB;IACd,OAAOL,MAAM,CAACM,IAAP,CAAYH,OAAZ,EAAqBE,GAArB,IAA4BF,OAAO,CAACE,GAAD,CAAnC,GAA2C3B,QAAQ,CAAC2B,GAAD,CAA1D;EACH;;EACD,OAAO;IACHxB,QAAQ,EAAE,CAACuB,GAAG,CAAC,UAAD,CADX;IAEHtB,OAAO,EAAE,CAAC,CAACsB,GAAG,CAAC,SAAD,CAFX;IAGHrB,eAAe,EAAE,CAAC,CAACqB,GAAG,CAAC,iBAAD,CAHnB;IAIHpB,cAAc,EAAEoB,GAAG,CAAC,gBAAD,CAJhB;IAKHlB,UAAU,EAAEqB,IAAI,CAACC,GAAL,CAASJ,GAAG,CAAC,YAAD,CAAZ,EAA4B,CAA5B,CALT;IAMHjB,cAAc,EAAEiB,GAAG,CAAC,gBAAD,CANhB;IAOHhB,aAAa,EAAEgB,GAAG,CAAC,eAAD,CAPf;IAQHf,UAAU,EAAEe,GAAG,CAAC,YAAD,CARZ;IASHd,cAAc,EAAEc,GAAG,CAAC,gBAAD,CAThB;IAUHzB,MAAM,EAAEyB,GAAG,CAAC,SAAD,CAAH,IAAkBA,GAAG,CAAC,QAAD,CAV1B;IAWHb,KAAK,EAAEa,GAAG,CAAC,OAAD,CAXP;IAYHZ,QAAQ,EAAEY,GAAG,CAAC,UAAD,CAZV;IAaHX,KAAK,EAAEW,GAAG,CAAC,OAAD,CAbP;IAcHV,aAAa,EAAEU,GAAG,CAAC,eAAD,CAdf;IAeHT,mBAAmB,EAAES,GAAG,CAAC,qBAAD,CAfrB;IAgBHR,kBAAkB,EAAEQ,GAAG,CAAC,oBAAD,CAhBpB;IAiBHP,iBAAiB,EAAEO,GAAG,CAAC,mBAAD,CAjBnB;IAkBHN,gBAAgB,EAAEM,GAAG,CAAC,kBAAD,CAlBlB;IAmBHL,MAAM,EAAE,CAAC,CAACK,GAAG,CAAC,QAAD;EAnBV,CAAP;AAqBH;;AACD7B,OAAO,CAACE,SAAR,GAAoBA,SAApB"},"metadata":{},"sourceType":"script"}