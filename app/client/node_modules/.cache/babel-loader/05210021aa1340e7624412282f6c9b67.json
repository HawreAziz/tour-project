{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar assert_1 = tslib_1.__importDefault(require(\"assert\"));\n\nvar util_1 = require(\"./util\");\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(sourceLines, sourceLoc, targetLoc) {\n    if (targetLoc === void 0) {\n      targetLoc = sourceLoc;\n    }\n\n    this.sourceLines = sourceLines;\n    this.sourceLoc = sourceLoc;\n    this.targetLoc = targetLoc;\n  }\n\n  Mapping.prototype.slice = function (lines, start, end) {\n    if (end === void 0) {\n      end = lines.lastPos();\n    }\n\n    var sourceLines = this.sourceLines;\n    var sourceLoc = this.sourceLoc;\n    var targetLoc = this.targetLoc;\n\n    function skip(name) {\n      var sourceFromPos = sourceLoc[name];\n      var targetFromPos = targetLoc[name];\n      var targetToPos = start;\n\n      if (name === \"end\") {\n        targetToPos = end;\n      } else {\n        assert_1.default.strictEqual(name, \"start\");\n      }\n\n      return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n    }\n\n    if (util_1.comparePos(start, targetLoc.start) <= 0) {\n      if (util_1.comparePos(targetLoc.end, end) <= 0) {\n        targetLoc = {\n          start: subtractPos(targetLoc.start, start.line, start.column),\n          end: subtractPos(targetLoc.end, start.line, start.column)\n        }; // The sourceLoc can stay the same because the contents of the\n        // targetLoc have not changed.\n      } else if (util_1.comparePos(end, targetLoc.start) <= 0) {\n        return null;\n      } else {\n        sourceLoc = {\n          start: sourceLoc.start,\n          end: skip(\"end\")\n        };\n        targetLoc = {\n          start: subtractPos(targetLoc.start, start.line, start.column),\n          end: subtractPos(end, start.line, start.column)\n        };\n      }\n    } else {\n      if (util_1.comparePos(targetLoc.end, start) <= 0) {\n        return null;\n      }\n\n      if (util_1.comparePos(targetLoc.end, end) <= 0) {\n        sourceLoc = {\n          start: skip(\"start\"),\n          end: sourceLoc.end\n        };\n        targetLoc = {\n          // Same as subtractPos(start, start.line, start.column):\n          start: {\n            line: 1,\n            column: 0\n          },\n          end: subtractPos(targetLoc.end, start.line, start.column)\n        };\n      } else {\n        sourceLoc = {\n          start: skip(\"start\"),\n          end: skip(\"end\")\n        };\n        targetLoc = {\n          // Same as subtractPos(start, start.line, start.column):\n          start: {\n            line: 1,\n            column: 0\n          },\n          end: subtractPos(end, start.line, start.column)\n        };\n      }\n    }\n\n    return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n  };\n\n  Mapping.prototype.add = function (line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n      start: addPos(this.targetLoc.start, line, column),\n      end: addPos(this.targetLoc.end, line, column)\n    });\n  };\n\n  Mapping.prototype.subtract = function (line, column) {\n    return new Mapping(this.sourceLines, this.sourceLoc, {\n      start: subtractPos(this.targetLoc.start, line, column),\n      end: subtractPos(this.targetLoc.end, line, column)\n    });\n  };\n\n  Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n    if (skipFirstLine === void 0) {\n      skipFirstLine = false;\n    }\n\n    if (noNegativeColumns === void 0) {\n      noNegativeColumns = false;\n    }\n\n    if (by === 0) {\n      return this;\n    }\n\n    var targetLoc = this.targetLoc;\n    var startLine = targetLoc.start.line;\n    var endLine = targetLoc.end.line;\n\n    if (skipFirstLine && startLine === 1 && endLine === 1) {\n      return this;\n    }\n\n    targetLoc = {\n      start: targetLoc.start,\n      end: targetLoc.end\n    };\n\n    if (!skipFirstLine || startLine > 1) {\n      var startColumn = targetLoc.start.column + by;\n      targetLoc.start = {\n        line: startLine,\n        column: noNegativeColumns ? Math.max(0, startColumn) : startColumn\n      };\n    }\n\n    if (!skipFirstLine || endLine > 1) {\n      var endColumn = targetLoc.end.column + by;\n      targetLoc.end = {\n        line: endLine,\n        column: noNegativeColumns ? Math.max(0, endColumn) : endColumn\n      };\n    }\n\n    return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n  };\n\n  return Mapping;\n}();\n\nexports.default = Mapping;\n\nfunction addPos(toPos, line, column) {\n  return {\n    line: toPos.line + line - 1,\n    column: toPos.line === 1 ? toPos.column + column : toPos.column\n  };\n}\n\nfunction subtractPos(fromPos, line, column) {\n  return {\n    line: fromPos.line - line + 1,\n    column: fromPos.line === line ? fromPos.column - column : fromPos.column\n  };\n}\n\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n  var targetComparison = util_1.comparePos(targetFromPos, targetToPos);\n\n  if (targetComparison === 0) {\n    // Trivial case: no characters to skip.\n    return sourceFromPos;\n  }\n\n  var sourceCursor, targetCursor;\n\n  if (targetComparison < 0) {\n    // Skipping forward.\n    sourceCursor = sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n    targetCursor = targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n    var lineDiff = targetToPos.line - targetCursor.line;\n    sourceCursor.line += lineDiff;\n    targetCursor.line += lineDiff;\n\n    if (lineDiff > 0) {\n      // If jumping to later lines, reset columns to the beginnings\n      // of those lines.\n      sourceCursor.column = 0;\n      targetCursor.column = 0;\n    } else {\n      assert_1.default.strictEqual(lineDiff, 0);\n    }\n\n    while (util_1.comparePos(targetCursor, targetToPos) < 0 && targetLines.nextPos(targetCursor, true)) {\n      assert_1.default.ok(sourceLines.nextPos(sourceCursor, true));\n      assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n    }\n  } else {\n    // Skipping backward.\n    sourceCursor = sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n    targetCursor = targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n    var lineDiff = targetToPos.line - targetCursor.line;\n    sourceCursor.line += lineDiff;\n    targetCursor.line += lineDiff;\n\n    if (lineDiff < 0) {\n      // If jumping to earlier lines, reset columns to the ends of\n      // those lines.\n      sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n      targetCursor.column = targetLines.getLineLength(targetCursor.line);\n    } else {\n      assert_1.default.strictEqual(lineDiff, 0);\n    }\n\n    while (util_1.comparePos(targetToPos, targetCursor) < 0 && targetLines.prevPos(targetCursor, true)) {\n      assert_1.default.ok(sourceLines.prevPos(sourceCursor, true));\n      assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n    }\n  }\n\n  return sourceCursor;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","assert_1","__importDefault","util_1","Mapping","sourceLines","sourceLoc","targetLoc","prototype","slice","lines","start","end","lastPos","skip","name","sourceFromPos","targetFromPos","targetToPos","default","strictEqual","skipChars","comparePos","subtractPos","line","column","add","addPos","subtract","indent","by","skipFirstLine","noNegativeColumns","startLine","endLine","startColumn","Math","max","endColumn","toPos","fromPos","targetLines","targetComparison","sourceCursor","targetCursor","skipSpaces","lineDiff","nextPos","ok","charAt","firstPos","getLineLength","prevPos"],"sources":["/home/haziz1/node_modules/recast/lib/mapping.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar assert_1 = tslib_1.__importDefault(require(\"assert\"));\nvar util_1 = require(\"./util\");\nvar Mapping = /** @class */ (function () {\n    function Mapping(sourceLines, sourceLoc, targetLoc) {\n        if (targetLoc === void 0) { targetLoc = sourceLoc; }\n        this.sourceLines = sourceLines;\n        this.sourceLoc = sourceLoc;\n        this.targetLoc = targetLoc;\n    }\n    Mapping.prototype.slice = function (lines, start, end) {\n        if (end === void 0) { end = lines.lastPos(); }\n        var sourceLines = this.sourceLines;\n        var sourceLoc = this.sourceLoc;\n        var targetLoc = this.targetLoc;\n        function skip(name) {\n            var sourceFromPos = sourceLoc[name];\n            var targetFromPos = targetLoc[name];\n            var targetToPos = start;\n            if (name === \"end\") {\n                targetToPos = end;\n            }\n            else {\n                assert_1.default.strictEqual(name, \"start\");\n            }\n            return skipChars(sourceLines, sourceFromPos, lines, targetFromPos, targetToPos);\n        }\n        if (util_1.comparePos(start, targetLoc.start) <= 0) {\n            if (util_1.comparePos(targetLoc.end, end) <= 0) {\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n                // The sourceLoc can stay the same because the contents of the\n                // targetLoc have not changed.\n            }\n            else if (util_1.comparePos(end, targetLoc.start) <= 0) {\n                return null;\n            }\n            else {\n                sourceLoc = {\n                    start: sourceLoc.start,\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    start: subtractPos(targetLoc.start, start.line, start.column),\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        else {\n            if (util_1.comparePos(targetLoc.end, start) <= 0) {\n                return null;\n            }\n            if (util_1.comparePos(targetLoc.end, end) <= 0) {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: sourceLoc.end,\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(targetLoc.end, start.line, start.column),\n                };\n            }\n            else {\n                sourceLoc = {\n                    start: skip(\"start\"),\n                    end: skip(\"end\"),\n                };\n                targetLoc = {\n                    // Same as subtractPos(start, start.line, start.column):\n                    start: { line: 1, column: 0 },\n                    end: subtractPos(end, start.line, start.column),\n                };\n            }\n        }\n        return new Mapping(this.sourceLines, sourceLoc, targetLoc);\n    };\n    Mapping.prototype.add = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: addPos(this.targetLoc.start, line, column),\n            end: addPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.subtract = function (line, column) {\n        return new Mapping(this.sourceLines, this.sourceLoc, {\n            start: subtractPos(this.targetLoc.start, line, column),\n            end: subtractPos(this.targetLoc.end, line, column),\n        });\n    };\n    Mapping.prototype.indent = function (by, skipFirstLine, noNegativeColumns) {\n        if (skipFirstLine === void 0) { skipFirstLine = false; }\n        if (noNegativeColumns === void 0) { noNegativeColumns = false; }\n        if (by === 0) {\n            return this;\n        }\n        var targetLoc = this.targetLoc;\n        var startLine = targetLoc.start.line;\n        var endLine = targetLoc.end.line;\n        if (skipFirstLine && startLine === 1 && endLine === 1) {\n            return this;\n        }\n        targetLoc = {\n            start: targetLoc.start,\n            end: targetLoc.end,\n        };\n        if (!skipFirstLine || startLine > 1) {\n            var startColumn = targetLoc.start.column + by;\n            targetLoc.start = {\n                line: startLine,\n                column: noNegativeColumns ? Math.max(0, startColumn) : startColumn,\n            };\n        }\n        if (!skipFirstLine || endLine > 1) {\n            var endColumn = targetLoc.end.column + by;\n            targetLoc.end = {\n                line: endLine,\n                column: noNegativeColumns ? Math.max(0, endColumn) : endColumn,\n            };\n        }\n        return new Mapping(this.sourceLines, this.sourceLoc, targetLoc);\n    };\n    return Mapping;\n}());\nexports.default = Mapping;\nfunction addPos(toPos, line, column) {\n    return {\n        line: toPos.line + line - 1,\n        column: toPos.line === 1 ? toPos.column + column : toPos.column,\n    };\n}\nfunction subtractPos(fromPos, line, column) {\n    return {\n        line: fromPos.line - line + 1,\n        column: fromPos.line === line ? fromPos.column - column : fromPos.column,\n    };\n}\nfunction skipChars(sourceLines, sourceFromPos, targetLines, targetFromPos, targetToPos) {\n    var targetComparison = util_1.comparePos(targetFromPos, targetToPos);\n    if (targetComparison === 0) {\n        // Trivial case: no characters to skip.\n        return sourceFromPos;\n    }\n    var sourceCursor, targetCursor;\n    if (targetComparison < 0) {\n        // Skipping forward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos) || sourceLines.lastPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos) || targetLines.lastPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff > 0) {\n            // If jumping to later lines, reset columns to the beginnings\n            // of those lines.\n            sourceCursor.column = 0;\n            targetCursor.column = 0;\n        }\n        else {\n            assert_1.default.strictEqual(lineDiff, 0);\n        }\n        while (util_1.comparePos(targetCursor, targetToPos) < 0 &&\n            targetLines.nextPos(targetCursor, true)) {\n            assert_1.default.ok(sourceLines.nextPos(sourceCursor, true));\n            assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    else {\n        // Skipping backward.\n        sourceCursor =\n            sourceLines.skipSpaces(sourceFromPos, true) || sourceLines.firstPos();\n        targetCursor =\n            targetLines.skipSpaces(targetFromPos, true) || targetLines.firstPos();\n        var lineDiff = targetToPos.line - targetCursor.line;\n        sourceCursor.line += lineDiff;\n        targetCursor.line += lineDiff;\n        if (lineDiff < 0) {\n            // If jumping to earlier lines, reset columns to the ends of\n            // those lines.\n            sourceCursor.column = sourceLines.getLineLength(sourceCursor.line);\n            targetCursor.column = targetLines.getLineLength(targetCursor.line);\n        }\n        else {\n            assert_1.default.strictEqual(lineDiff, 0);\n        }\n        while (util_1.comparePos(targetToPos, targetCursor) < 0 &&\n            targetLines.prevPos(targetCursor, true)) {\n            assert_1.default.ok(sourceLines.prevPos(sourceCursor, true));\n            assert_1.default.strictEqual(sourceLines.charAt(sourceCursor), targetLines.charAt(targetCursor));\n        }\n    }\n    return sourceCursor;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}