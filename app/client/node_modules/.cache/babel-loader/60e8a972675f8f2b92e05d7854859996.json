{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { signin as signinRoute, signup as signupRoute } from '../../api';\nimport { formatError } from \".\";\nimport localforage from \"localforage\";\nconst initialState = {\n  user: null,\n  error: \"\",\n  loading: false\n};\nexport const signin = createAsyncThunk(\"/auth/signin\", async (signinParams, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const response = await signinRoute(signinParams);\n    signinParams.toast.success(\"Login Succesfully!\");\n    signinParams.navigate('/');\n    return response.data;\n  } catch (error) {\n    return rejectWithValue({\n      error: formatError(error)\n    });\n  }\n});\nexport const signup = createAsyncThunk(\"/auth/signup\", async (signupParams, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const response = await signupRoute(signupParams);\n    signupParams.toast.success('Signup successfull');\n    signupParams.navigate(\"/\");\n    return response.data;\n  } catch (error) {\n    const err = rejectWithValue({\n      error: formatError(error)\n    });\n    return err;\n  }\n});\nconst authSlice = createSlice({\n  name: \"Auth\",\n  initialState,\n  reducers: {\n    setUser(state, _ref3) {\n      let {\n        payload\n      } = _ref3;\n      state.user = payload.user;\n    },\n\n    signout(state) {\n      localforage.clear();\n      state.user = null;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(signin.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(signin.fulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n\n      if (!payload) {\n        return;\n      }\n\n      (async () => await localforage.setItem(\"profile\", JSON.stringify(payload)))();\n\n      state.user = payload.user;\n    });\n    builder.addCase(signin.rejected, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.error = payload ? payload.error : \"Something went wrong\";\n      state.loading = false;\n    });\n    builder.addCase(signup.pending, state => {\n      state.loading = true;\n      state.error = \"\";\n    });\n    builder.addCase(signup.fulfilled, state => {\n      state.loading = false;\n    });\n    builder.addCase(signup.rejected, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.error = payload ? payload.error : \"Something went wrong\";\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  setUser,\n  signout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","signin","signinRoute","signup","signupRoute","formatError","localforage","initialState","user","error","loading","signinParams","rejectWithValue","response","toast","success","navigate","data","signupParams","err","authSlice","name","reducers","setUser","state","payload","signout","clear","extraReducers","builder","addCase","pending","fulfilled","setItem","JSON","stringify","rejected","actions","reducer"],"sources":["/home/haziz1/react-projects/tourApp/app/client/src/states/reducers/auth-reducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { toast as ToastType } from 'react-toastify';\nimport { NavigateFunction } from \"react-router-dom\";\nimport {\n    signin as signinRoute,\n    signup as signupRoute,\n} from '../../api';\nimport { UserData, User } from '../../../types';\nimport { formatError } from \".\";\nimport localforage from \"localforage\";\n\n\n\ninterface AuthState {\n    user: User | null;\n    loading: boolean;\n    error: string;\n}\n\nconst initialState: AuthState = {\n    user: null,\n    error: \"\",\n    loading: false\n};\n\n\ninterface AuthParams {\n    email: string;\n    password: string;\n    navigate: NavigateFunction;\n    toast: typeof ToastType;\n}\n\n\ninterface SignupParams extends AuthParams {\n    name: string;\n}\n\n\n\nexport const signin = createAsyncThunk<AuthState, AuthParams, { rejectValue: { error: string } }>(\n    \"/auth/signin\",\n    async (signinParams: AuthParams, { rejectWithValue }) => {\n        try {\n            const response = await signinRoute(signinParams)\n            signinParams.toast.success(\"Login Succesfully!\");\n            signinParams.navigate('/');\n            return response.data as AuthState;\n        } catch (error) {\n            return rejectWithValue({ error: formatError(error) });\n        }\n    });\n\n\nexport const signup = createAsyncThunk<AuthState, SignupParams, { rejectValue: { error: string } }>(\n    \"/auth/signup\",\n    async (signupParams: SignupParams, { rejectWithValue }) => {\n        try {\n            const response = await signupRoute(signupParams);\n            signupParams.toast.success('Signup successfull');\n            signupParams.navigate(\"/\");\n            return response.data as AuthState;\n        } catch (error) {\n            const err = rejectWithValue({ error: formatError(error) });\n            return err;\n        }\n    }\n)\n\nconst authSlice = createSlice({\n    name: \"Auth\",\n    initialState,\n    reducers: {\n        setUser(state: AuthState, { payload }: PayloadAction<UserData>) {\n            state.user = payload.user;\n        },\n        signout(state: AuthState) {\n            localforage.clear();\n            state.user = null;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(signin.pending, (state: AuthState) => {\n            state.loading = true;\n        });\n\n        builder.addCase(signin.fulfilled, (state: AuthState, { payload }) => {\n            if (!payload) {\n                return;\n            }\n        (async() => await localforage.setItem(\"profile\", JSON.stringify(payload)))();\n            state.user = payload.user;\n        });\n\n        builder.addCase(signin.rejected, (state: AuthState, { payload }) => {\n            state.error = payload ? payload.error : \"Something went wrong\";\n            state.loading = false;\n        });\n\n        builder.addCase(signup.pending, (state: AuthState) => {\n            state.loading = true;\n            state.error = \"\";\n        });\n\n        builder.addCase(signup.fulfilled, (state: AuthState) => {\n            state.loading = false;\n        });\n\n        builder.addCase(signup.rejected, (state: AuthState, { payload }) => {\n            state.error = payload ? payload.error : \"Something went wrong\";\n            state.loading = false;\n        });\n    }\n});\n\n\n\nexport const { setUser, signout } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}