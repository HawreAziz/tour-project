{"ast":null,"code":"import { ActionTypes } from \"../action-types\";\nimport { signup as signupRoute, createTour as createTourRoute } from '../../api';\nimport localforage from \"localforage\";\nimport { AxiosError } from \"axios\";\n; // export const signin = (signinParams: AuthParams) => {\n//     return async (dispatch: Dispatch<SigninActions>) => {\n//         dispatch({\n//             type: ActionTypes.SIGNIN_LOADING,\n//         });\n//         try {\n//             const response = await signinRoute(signinParams)\n//             await localforage.setItem('profile', JSON.stringify(response.data));\n//             signinParams.toast.success(\"Login Succesfully!\");\n//             signinParams.navigate('/');\n//             dispatch({\n//                 type: ActionTypes.SIGN_IN,\n//                 payload: response.data\n//             });\n//         } catch (error) {\n//             dispatch({\n//                 type: ActionTypes.SIGNIN_ERROR,\n//                 payload: { error: formatError(error) }\n//             });\n//         }\n//     }\n// }\n\nexport const signup = signupParams => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.SIGNUP_LOADING\n    });\n\n    try {\n      const {\n        data\n      } = await signupRoute(signupParams);\n      dispatch({\n        type: ActionTypes.SIGN_UP,\n        payload: data\n      });\n      signupParams.toast(\"Singup successfully\");\n      signupParams.navigate('/');\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.SIGNUP_ERROR,\n        payload: {\n          error: formatError(error)\n        }\n      });\n    }\n  };\n};\nexport const setUser = () => {\n  return async dispatch => {\n    const user = await localforage.getItem(\"profile\");\n\n    if (user) {\n      dispatch({\n        type: ActionTypes.SET_USER,\n        payload: {\n          user: JSON.parse(user).user\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    await localforage.clear();\n    dispatch({\n      type: ActionTypes.SIGN_OUT\n    });\n  };\n};\nexport const createTour = tourData => {\n  return async dispatch => {\n    dispatch({\n      type: ActionTypes.TOUR_CREATE\n    });\n\n    try {\n      const {\n        data\n      } = await createTourRoute(tourData); // navigate to home\n      // toast the result\n\n      dispatch({\n        type: ActionTypes.TOUR_CREATE_FINISHED\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.TOUR_CREATE_ERROR,\n        payload: {\n          error: formatError(error)\n        }\n      });\n    }\n  };\n};\n\nconst formatError = error => {\n  var _error$response;\n\n  return error instanceof AxiosError ? (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.error : \"Something went wrong on the server\";\n};","map":{"version":3,"names":["ActionTypes","signup","signupRoute","createTour","createTourRoute","localforage","AxiosError","signupParams","dispatch","type","SIGNUP_LOADING","data","SIGN_UP","payload","toast","navigate","error","SIGNUP_ERROR","formatError","setUser","user","getItem","SET_USER","JSON","parse","signout","clear","SIGN_OUT","tourData","TOUR_CREATE","TOUR_CREATE_FINISHED","TOUR_CREATE_ERROR","response"],"sources":["/home/haziz1/react-projects/tour-app/client/src/states/action-creators/index.ts"],"sourcesContent":["import { ActionTypes } from \"../action-types\";\nimport { SigninActions } from '../actions/signin-action';\nimport { SignupActions } from \"../actions/signup-action\";\nimport {\n    signin as signinRoute,\n    signup as signupRoute,\n    createTour as createTourRoute\n} from '../../api'\nimport { Dispatch } from \"react\";\nimport localforage from \"localforage\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport { toast as toastType } from \"react-toastify\";\nimport { AxiosError } from \"axios\";\nimport { Tour } from \"../../../types\";\nimport { TourActions } from \"../actions/tour-action\";\n\n\ninterface AuthParams {\n    email: string;\n    password: string;\n    navigate: NavigateFunction;\n    toast: typeof toastType;\n}\n\ninterface SignupParams extends AuthParams {\n    name: string\n};\n\n\n\n// export const signin = (signinParams: AuthParams) => {\n//     return async (dispatch: Dispatch<SigninActions>) => {\n//         dispatch({\n//             type: ActionTypes.SIGNIN_LOADING,\n//         });\n//         try {\n//             const response = await signinRoute(signinParams)\n//             await localforage.setItem('profile', JSON.stringify(response.data));\n//             signinParams.toast.success(\"Login Succesfully!\");\n//             signinParams.navigate('/');\n//             dispatch({\n//                 type: ActionTypes.SIGN_IN,\n//                 payload: response.data\n//             });\n//         } catch (error) {\n//             dispatch({\n//                 type: ActionTypes.SIGNIN_ERROR,\n//                 payload: { error: formatError(error) }\n//             });\n//         }\n//     }\n// }\n\n\n\nexport const signup = (signupParams: SignupParams) => {\n    return async (dispatch: Dispatch<SignupActions>) => {\n        dispatch({\n            type: ActionTypes.SIGNUP_LOADING\n        });\n        try {\n            const { data } = await signupRoute(signupParams);\n            dispatch({\n                type: ActionTypes.SIGN_UP,\n                payload: data\n            });\n            signupParams.toast(\"Singup successfully\");\n            signupParams.navigate('/');\n        } catch (error) {\n            dispatch({\n                type: ActionTypes.SIGNUP_ERROR,\n                payload: { error: formatError(error) }\n            });\n        }\n    }\n}\n\n\nexport const setUser = () => {\n    return async (dispatch: Dispatch<SigninActions>) => {\n        const user = (await localforage.getItem(\"profile\")) as string;\n        if (user) {\n            dispatch({\n                type: ActionTypes.SET_USER,\n                payload: {\n                    user: JSON.parse(user).user\n                }\n            });\n        }\n    }\n}\n\n\nexport const signout = () => {\n    return async (dispatch: Dispatch<SigninActions>) => {\n        await localforage.clear()\n        dispatch({ type: ActionTypes.SIGN_OUT });\n    }\n}\n\n\nexport const createTour = (tourData: Tour) => {\n    return async (dispatch: Dispatch<TourActions>) => {\n        dispatch({ type: ActionTypes.TOUR_CREATE });\n        try {\n            const { data } = await createTourRoute(tourData);\n            // navigate to home\n            // toast the result\n            dispatch({ type: ActionTypes.TOUR_CREATE_FINISHED });\n        } catch (error) {\n            dispatch({\n                type: ActionTypes.TOUR_CREATE_ERROR, payload: {\n                    error: formatError(error)\n                }\n            });\n        }\n    }\n}\n\n\nconst formatError = (error: any): string => {\n    return error instanceof AxiosError\n        ? error.response?.data.error\n        : \"Something went wrong on the server\";\n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAGA,SAEIC,MAAM,IAAIC,WAFd,EAGIC,UAAU,IAAIC,eAHlB,QAIO,WAJP;AAMA,OAAOC,WAAP,MAAwB,aAAxB;AAGA,SAASC,UAAT,QAA2B,OAA3B;AAcC,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAO,MAAML,MAAM,GAAIM,YAAD,IAAgC;EAClD,OAAO,MAAOC,QAAP,IAA6C;IAChDA,QAAQ,CAAC;MACLC,IAAI,EAAET,WAAW,CAACU;IADb,CAAD,CAAR;;IAGA,IAAI;MACA,MAAM;QAAEC;MAAF,IAAW,MAAMT,WAAW,CAACK,YAAD,CAAlC;MACAC,QAAQ,CAAC;QACLC,IAAI,EAAET,WAAW,CAACY,OADb;QAELC,OAAO,EAAEF;MAFJ,CAAD,CAAR;MAIAJ,YAAY,CAACO,KAAb,CAAmB,qBAAnB;MACAP,YAAY,CAACQ,QAAb,CAAsB,GAAtB;IACH,CARD,CAQE,OAAOC,KAAP,EAAc;MACZR,QAAQ,CAAC;QACLC,IAAI,EAAET,WAAW,CAACiB,YADb;QAELJ,OAAO,EAAE;UAAEG,KAAK,EAAEE,WAAW,CAACF,KAAD;QAApB;MAFJ,CAAD,CAAR;IAIH;EACJ,CAlBD;AAmBH,CApBM;AAuBP,OAAO,MAAMG,OAAO,GAAG,MAAM;EACzB,OAAO,MAAOX,QAAP,IAA6C;IAChD,MAAMY,IAAI,GAAI,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,SAApB,CAApB;;IACA,IAAID,IAAJ,EAAU;MACNZ,QAAQ,CAAC;QACLC,IAAI,EAAET,WAAW,CAACsB,QADb;QAELT,OAAO,EAAE;UACLO,IAAI,EAAEG,IAAI,CAACC,KAAL,CAAWJ,IAAX,EAAiBA;QADlB;MAFJ,CAAD,CAAR;IAMH;EACJ,CAVD;AAWH,CAZM;AAeP,OAAO,MAAMK,OAAO,GAAG,MAAM;EACzB,OAAO,MAAOjB,QAAP,IAA6C;IAChD,MAAMH,WAAW,CAACqB,KAAZ,EAAN;IACAlB,QAAQ,CAAC;MAAEC,IAAI,EAAET,WAAW,CAAC2B;IAApB,CAAD,CAAR;EACH,CAHD;AAIH,CALM;AAQP,OAAO,MAAMxB,UAAU,GAAIyB,QAAD,IAAoB;EAC1C,OAAO,MAAOpB,QAAP,IAA2C;IAC9CA,QAAQ,CAAC;MAAEC,IAAI,EAAET,WAAW,CAAC6B;IAApB,CAAD,CAAR;;IACA,IAAI;MACA,MAAM;QAAElB;MAAF,IAAW,MAAMP,eAAe,CAACwB,QAAD,CAAtC,CADA,CAEA;MACA;;MACApB,QAAQ,CAAC;QAAEC,IAAI,EAAET,WAAW,CAAC8B;MAApB,CAAD,CAAR;IACH,CALD,CAKE,OAAOd,KAAP,EAAc;MACZR,QAAQ,CAAC;QACLC,IAAI,EAAET,WAAW,CAAC+B,iBADb;QACgClB,OAAO,EAAE;UAC1CG,KAAK,EAAEE,WAAW,CAACF,KAAD;QADwB;MADzC,CAAD,CAAR;IAKH;EACJ,CAdD;AAeH,CAhBM;;AAmBP,MAAME,WAAW,GAAIF,KAAD,IAAwB;EAAA;;EACxC,OAAOA,KAAK,YAAYV,UAAjB,sBACDU,KAAK,CAACgB,QADL,oDACD,gBAAgBrB,IAAhB,CAAqBK,KADpB,GAED,oCAFN;AAGH,CAJD"},"metadata":{},"sourceType":"module"}